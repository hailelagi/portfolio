{"version":3,"sources":["img/profile.jpg","components/introduction/Navbar.jsx","components/introduction/Profile.jsx","components/introduction/Introduction.jsx","components/interests/Interest.jsx","components/interests/Interests.jsx","components/skills/Skill.jsx","components/skills/Skills.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","Profile","id","src","profile","width","height","alt","icon","faCloudDownloadAlt","size","faClipboardList","Introduction","Fragment","Component","Interest","props","color","title","Interests","faLaptopCode","faChartLine","faMobileAlt","Skill","version","xmlns","r","cx","cy","fill","strokeDasharray","strokeDashoffset","style","mastery","Math","PI","x","y","skill","exp","Skills","state","offset","this","setState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c504a1cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.d00071f2.jpg\";","import React from 'react';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav>\r\n            <ul className={\"top-nav\"}>\r\n                <li><a href=\"Introduction.jsx\">about me</a></li>\r\n                <li><a href=\"Introduction.jsx\">skills</a></li>\r\n                <li><a href=\"Introduction.jsx\">portfolio</a></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport profile from \"../../img/profile.jpg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faClipboardList,\r\n    faCloudDownloadAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nfunction Profile() {\r\n  return (\r\n    <header className={\"profile\"}>\r\n      <img\r\n        id=\"profile-pic\"\r\n        src={profile}\r\n        width={150}\r\n        height={150}\r\n        alt={\"profile\"}\r\n      />\r\n      <h1>\r\n        {\" \"}\r\n        Hi, I'm <span id=\"name\">Haile Lagi</span> - chemical engineering\r\n        student, programmer and web developer. Take a look around the awesome stuff I build.\r\n          See anything you like, buy me coffee?\r\n      </h1>\r\n      <div className={\"call-to-action\"}>\r\n        <button><FontAwesomeIcon icon={faCloudDownloadAlt} size=\"xl\" /> download my resume</button>\r\n        <button><FontAwesomeIcon icon={faClipboardList} size=\"xl\" /> portfolio</button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass Introduction extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <section className={\"introduction\"}>\r\n          <Navbar />\r\n          <Profile />\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Introduction;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nfunction Interest(props) {\r\n  return (\r\n    <div className=\"interest\">\r\n      <FontAwesomeIcon icon={props.icon} size=\"6x\" color={props.color} />\r\n      <p>{props.title}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interest;\r\n","import React from \"react\";\nimport Interest from \"./Interest\";\nimport {\n  faChartLine,\n  faLaptopCode,\n  faMobileAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Interests() {\n  return (\n    <section className=\"interests\">\n      <h2>Interests</h2>\n      <div className=\"interest-align\">\n        <Interest title=\"Web development\" icon={faLaptopCode} color=\"#B11030\"/>\n        <Interest title=\"Scientific computing\" icon={faChartLine} color=\"#24A159\" />\n        <Interest title=\"Mobile development\" icon={faMobileAlt} color=\"#4B6A88\" />\n      </div>\n    </section>\n  );\n}\n\nexport default Interests;\n","import React from \"react\";\n\nfunction Skill(props) {\n    return (\n        <div className=\"skill\">\n            <svg\n                id=\"svg\"\n                width=\"180\"\n                height=\"180\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g>\n                    <circle\n                        r=\"75\"\n                        cx=\"100\"\n                        cy=\"100\"\n                        fill=\"#f4f4f4\"\n                        strokeDasharray=\"565.48\"\n                        strokeDashoffset=\"0\"\n                    />\n                    <circle\n                        id=\"bar\"\n                        r=\"75\"\n                        cx=\"100\"\n                        cy=\"100\"\n                        fill=\"transparent\"\n                        strokeDasharray=\"565.48\"\n                        style={{strokeDashoffset: ((100 - props.mastery) / 100) * Math.PI * (90 * 2)}}\n                    />\n                    <text className=\"percentage\" x=\"70\" y=\"110\" fill=\"242424\">{props.mastery}%</text>\n                </g>\n            </svg>\n            <h4 className=\"info\">{props.skill}</h4>\n            <p className=\"info\">{props.exp}</p>\n        </div>\n    );\n}\n\nexport default Skill;\n","import React, { Component } from \"react\";\nimport Skill from \"./Skill\";\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { offset: 0};\n  }\n  componentDidMount() {\n    this.setState({ offset: 0});\n  }\n\n  render() {\n    return (\n      <section className=\"skills\">\n        <h2>Professional skills</h2>\n        <div className=\"top-skills\">\n          <Skill mastery=\"70\" offset={this.state.offset} skill={\"Python / Scipy\"} exp=\"5 months\" />\n          <Skill mastery=\"75\" offset={this.state.offset} skill=\"Javascript / React\" exp=\"7 months\" />\n          <Skill mastery=\"20\" offset={this.state.offset} skill={\"Node.js / Express\"} exp=\"1 month\" />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Skills;\n","import React from \"react\";\nimport Introduction from \"./components/introduction/Introduction\";\nimport \"./styles/App.css\";\nimport \"./styles/interesting.css\";\nimport \"./styles/skills.css\";\nimport Interests from \"./components/interests/Interests\";\nimport Skills from \"./components/skills/Skills\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Introduction />\n      <Interests />\n      <Skills />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}